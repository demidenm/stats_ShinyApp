FA1 =~ a1 + a2 + a3
FA2 =~ b1 + b2 + b3
FA1 ~~ .2*FA2
'
sim_data <- data.frame(
sim(nRep = 1, model = "laavan", n = 100,
generate = model_pop, dataOnly = T,
std.lv = TRUE, laavanfun= "sem",meanstructure = TRUE, seed=100))
kable(cor(sim_data, method = "pearson"), digits = 2) %>%
kable_styling("striped",
full_width = T, font_size = 12, html_font = 'Times')
cfa_fit <- sem(model = model_cfa,
data = sim_data)
model_parameters(cfa_fit)
cfa_fit_sum <- summary(object = cfa_fit, standardized=TRUE, fit.measures = TRUE)
## Plot
semPaths(object = cfa_fit,
style = "lisrel", whatLabels = "std",intercepts = TRUE,residuals = TRUE,
font = 14, edge.label.font = 12, edge.label.cex = 1.2, edge.color = "black",
layout = "tree")
## Pooling across simulated data
sim_n <- sim(nRep = 100, model = "lavaan", n = 100,
generate = model_pop, dataOnly = T,
std.lv = TRUE, laavanfun= "sem",meanstructure = TRUE, seed=100)
pooled_mean <- data.frame(aaply(laply(sim_n, as.matrix), c(2,3), mean))
pooled_sd <- data.frame(aaply(laply(sim_n, as.matrix), c(2,3), sd))
pooled_cfa <- lapply(sim_data, function(x) cfa(model = cfa_model, data = x))
pooled_cfa <- lapply(sim_data, function(x) cfa(model = cfa_fit, data = x))
### Using factor tables to load in data for simulation
###
model_pop <- '
#Factor item loadings
FA1 =~ .5*a1 + .5*a2 + .5*a3
FA2 =~ .5*b1 + .5*b2 + .5*b3
#Factor correlation
FA1 ~~ .5*FA2
'
model_cfa <- '
#Factor item loadings
FA1 =~ a1 + a2 + a3
FA2 =~ b1 + b2 + b3
FA1 ~~ .2*FA2
'
sim_data <- data.frame(
sim(nRep = 1, model = "laavan", n = 100,
generate = model_pop, dataOnly = T,
std.lv = TRUE, laavanfun= "sem",meanstructure = TRUE, seed=100))
kable(cor(sim_data, method = "pearson"), digits = 2) %>%
kable_styling("striped",
full_width = T, font_size = 12, html_font = 'Times')
cfa_fit <- sem(model = model_cfa,
data = sim_data)
model_parameters(cfa_fit)
cfa_fit_sum <- summary(object = cfa_fit, standardized=TRUE, fit.measures = TRUE)
## Plot
semPaths(object = cfa_fit,
style = "lisrel", whatLabels = "std",intercepts = TRUE,residuals = TRUE,
font = 14, edge.label.font = 12, edge.label.cex = 1.2, edge.color = "black",
layout = "tree")
## Pooling across simulated data
sim_n <- sim(nRep = 100, model = "lavaan", n = 100,
generate = model_pop, dataOnly = T,
std.lv = TRUE, laavanfun= "sem",meanstructure = TRUE, seed=100)
pooled_mean <- data.frame(aaply(laply(sim_n, as.matrix), c(2,3), mean))
pooled_sd <- data.frame(aaply(laply(sim_n, as.matrix), c(2,3), sd))
cfa_model <- list()
for (i in 1:length(sim_n)){
cfa_model[[i]] <- cfa(model = model_cfa,
data=sim_n[[i]])
}
cfa_fits <- list()
for (i in 1:length(cfa_model)){
cfa_fits[[i]] <- data.frame(summary(cfa_model[[i]], standardized=FALSE, fit.measures = TRUE)$PE)
invisible()
}
pooled_cfa_fits_min <- data.frame(aaply(laply(cfa_fits, as.matrix), c(2,3), min))
pooled_cfa_fits_max <- data.frame(aaply(laply(cfa_fits, as.matrix), c(2,3), max))
cfa_fits[[1]]
DV1_m <-5
DV1_sd <- .5
DV2_m <- 2.5
DV2_sd < 1.0
DV1_m <-5
DV1_sd <- .5
DV2_m <- 2.5
DV2_sd <- 1.0
DV3_m <- 9.0
DV3_sd <- 2.0
DVsim <- rnorm(n = 50,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
DVsim <- data.frame(rnorm(n = 50,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
View(DVsim)
DVsim <- data.frame(DV = rnorm(n = 50,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
View(DVsim)
DVsim <- data.frame(DV = rnorm(n = 300,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
set.seed(1)
DVsim <- data.frame(DV = rnorm(n = 300,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
mean(DVsim[1:100])
mean(DVsim[,1:100])
mean(DVsim$DV[1:100])
mean(DVsim$DV[1:101])
DVsim <- data.frame(DV = rnorm(n = 3000,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
mean(DVsim$DV[1:1001])
DVsim <- data.frame(DV = rnorm(n = 300,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
set.seed(1)
DVsim <- data.frame(DV = rnorm(n = 300,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
mean(DVsim$DV[101:200])
DV1_m <-5.0
DV1_sd <- .01
DV2_m <- 2.0
DV2_sd <- .01
DV3_m <- 9.0
DV3_sd <- .01
set.seed(1)
DVsim <- data.frame(DV = rnorm(n = 300,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
mean(DVsim$DV[101:200])
DV1_m <-5.0
DV1_sd <- .01
DV2_m <- 2.0
DV2_sd <- .01
DV3_m <- 9.0
DV3_sd <- .01
set.seed(1)
DVsim <- data.frame(DV = rnorm(n = 30,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
mean(DVsim$DV[101:200])
mean(DVsim$DV[1:30])
mean(DVsim$DV[1:10])
mean(seq(DVsim$DV,from = 1, to =30, by = 3))
DV1 <- rnorm(n = n,
mean = DV1_m,
sd = DV1_sd
)
DV1 <- rnorm(n = n,
mean = DV1_m,
sd = DV1_sd)
n_1 = 50
DV1 <- rnorm(n = n_1,
mean = DV1_m,
sd = DV1_sd)
n = 90
letters
IV <- factor(rep(LETTERS[1:3], length.out = n))
aov_Dat <- data.frame(DV = rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
aov_Dat <- factor(rep(LETTERS[1:3], length.out = n))
aov_Dat <- data.frame(DV = rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd)))
aov_Dat$IV <- factor(rep(LETTERS[1:3], length.out = n))
aov_Dat %>%
group_by(IV) %>%
summarise(mean = mean(), sd = sd())
View(aov_Dat)
aov_Dat %>%
group_by(IV)
library(tidyverse)
aov_Dat %>%
group_by(IV)
aov_Dat %>%
group_by(IV) %>%
summarise(mean = mean(DV), sd = sd(DV))
library(tidyverse)
aov_Dat %>%
group_by(IV) %>%
summarise(mean = mean(DV), sd = sd(DV))
aov_Dat %>%
group_by(IV) %>%
dplyr::summarise(mean = mean(DV), sd = sd(DV))
aov_Dat %>%
group_by(IV) %>%
summarize(mean = mean(DV), sd = sd(DV))
aov_Dat %>%
group_by(IV) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
d = c(DV1_sd, DV2_sd, DV3_sd))
DV1_m <-5.0
DV1_sd <- .01
DV2_m <- 2.0
DV2_sd <- .01
DV3_m <- 9.0
DV3_sd <- .01
set.seed(1)
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
d = c(DV1_sd, DV2_sd, DV3_sd))
set.seed(1)
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
IV <- factor(rep(c("Tall", "Average", "Short"), length.out = n))
TX <- factor(rep(c("Teatment", "Control"), length.out = n))
aov_dat <- data.frame(IV, TX, DV)
aov_dat %>%
group_by(IV) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
aov_dat %>%
group_by(TX) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
IV <- rnorm(n = n,
mean = c(TX1_m, TX2_m),
sd = c(TX_sd, TX2_sd))
TX1_m <-5.0
TX1_sd <- .01
TX2_m <- 2.0
TX2_sd <- .01
TX1_m <-19.0
TX1_sd <- .01
TX2_m <- 2.0
TX2_sd <- 1.01
set.seed(1)
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
TX <- rnorm(n = n,
mean = c(TX1_m, TX2_m),
sd = c(TX_sd, TX2_sd))
set.seed(1)
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
TX <- rnorm(n = n,
mean = c(TX1_m, TX2_m),
sd = c(TX1_sd, TX2_sd))
IV <- factor(rep(c("Tall", "Average", "Short"), length.out = n))
TX <- factor(rep(c("Teatment", "Control"), length.out = n))
set.seed(1)
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
TX <- rnorm(n = n,
mean = c(TX1_m, TX2_m),
sd = c(TX1_sd, TX2_sd))
IV_group <- factor(rep(c("Tall", "Average", "Short"), length.out = n))
TX_grp <- factor(rep(c("Teatment", "Control"), length.out = n))
aov_dat <- data.frame(DV, TX, IV_group, TX_grp)
aov_dat %>%
group_by(TX) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
aov_dat %>%
group_by(TX_grp) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
aov_dat %>%
group_by(IV_group) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
aov_dat <- data.frame(DV, TX, IV_group, TX_grp)
aov_dat %>%
group_by(IV_group) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
aov_dat %>%
group_by(TX_grp) %>%
dplyr::summarize(mean = mean(TX), sd = sd(TX))
aov_dat %>%
ggplot(aes(x = IV_group, y = DV)) +
geom_boxplot(aes(colour = TX_grp))+
theme_minimal()
aov_dat %>%
ggplot(aes(x = IV_group, y = DV)) +
geom_boxplot()+
theme_minimal()
n = 90
DV1_m <-5.0
DV1_sd <- .01
DV2_m <- 2.0
DV2_sd <- .01
DV3_m <- 9.0
DV3_sd <- .01
TX1_m <-19.0
TX1_sd <- .01
TX2_m <- 2.0
TX2_sd <- 1.01
set.seed(1)
DV <- rnorm(n = n,
mean = c(DV1_m, DV2_m, DV3_m),
sd = c(DV1_sd, DV2_sd, DV3_sd))
TX <- rnorm(n = n,
mean = c(TX1_m, TX2_m),
sd = c(TX1_sd, TX2_sd))
IV_group <- factor(rep(c("Tall", "Average", "Short"), length.out = n))
TX_grp <- factor(rep(c("Teatment", "Control"), length.out = n))
aov_dat <- data.frame(DV, TX, IV_group, TX_grp)
aov_dat %>%
group_by(TX_grp) %>%
dplyr::summarize(mean = mean(TX), sd = sd(TX))
aov_dat %>%
ggplot(aes(x = IV_group, y = DV)) +
geom_boxplot()+
theme_minimal()
aov_dat %>%
ggplot(aes(x = TX_grp, y = DV)) +
geom_boxplot()+
theme_minimal()
aov_dat %>%
group_by(IV_group) %>%
dplyr::summarize(mean = mean(DV), sd = sd(DV))
aov_dat %>%
ggplot(aes(x = IV_group, y = DV)) +
geom_boxplot()+
theme_minimal()
library(Superpower)
ANOVA_design(
design = "2b*2b",
n = c(20, 80, 40, 80),
mu = c(5, 4, 1, 4),
sd = c(3, 2, 1, 4),
labelnames = c("condition", "cheerful", "sad",
"voice", "human", "robot")
)
dat <- ANOVA_design(
design = "2b*2b",
n = c(20, 80, 40, 80),
mu = c(5, 4, 1, 4),
sd = c(3, 2, 1, 4),
labelnames = c("condition", "cheerful", "sad",
"voice", "human", "robot")
)
View(dat)
aov_dat <- data.frame(dat)
dat <- ANOVA_design(
design = "2b*2b",
n = c(20, 80, 40, 80),
mu = c(5, 4, 1, 4),
sd = c(3, 2, 1, 4),
labelnames = c("condition", "cheerful", "sad",
"voice", "human", "robot"),
plot = TRUE
)
View(dat)
aov_dat <- data.frame(dat$dataframe)
View(aov_dat)
library(tidyverse)
dat <- ANOVA_design(
design = "2b*2b",
n = c(20, 80, 40, 80),
mu = c(5, 4, 1, 4),
sd = c(3, 2, 1, 4),
labelnames = c("condition", "cheerful", "sad",
"voice", "human", "robot"),
plot = TRUE,
r = .3
)
?anova_design
?ANOVA_design
plot(dat$meansplot)
shiny::runApp('Desktop/UM/shiny_app/Demi_StatTest/stats_ShinyApp')
rsconnect::setAccountInfo(name='michaeldemidenko',
token='C26E1913A2FB053E72F772C4BAC42E5C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='michaeldemidenko',
token='C26E1913A2FB053E72F772C4BAC42E5C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='michaeldemidenko',
token='C26E1913A2FB053E72F772C4BAC42E5C',
secret='bxT8wJ7ZvFnvf/Jcl8WIRzOJFnOtxSYmBvR21Ekk')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data<- data.frame(var1 = rnorm(n = 50,
mean = 5,
sd = 2),
var2 = rnorm(n = 50,
mean = 4,
sd = 2))
grp_values <- rnorm(n = 50,
mean = c(5, 4),
sd = c(3, 1))
groups <- rep(letters[1:2], length.out = input$sample)
groups <- rep(letters[1:2], length.out = 50)
grps_df <- data.frame(grp_values, groups)
View(grps_df)
data.frame(data, grps_df)
data <- data.frame(data, grps_df)
View(data)
runApp()
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-input$alpha)
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05)
plot(onet_2)
mean(data$var1)
sd(data$var1)
(mean(data$var1)-5)/(sd(data$var1)/sqrt(50))
(mean(data$var1)-5)/(sd(data$var1)/sqrt(50))*2
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05,
alternative = "one.sided")
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05,
alternative = "two.sided")
plot(onet_2)
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05,
alternative = "less")
plot(onet_2)
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05,
alternative = "greater")
plot(onet_2)
onet_2
View(t.test)
?t.test
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05,
Paired = FALSE)
plot(onet_2)
onet_2
onet_2 <- t.test(x = data$var2,
mu = 5,
conf.level = 1-.05,
Paired = TRUE)
plot(onet_2)
onet_2
?t.test
onet_2 <- t.test(x = data$var2,
mu = 5,
Paired = TRUE)
plot(onet_2)
onet_2
data<- data.frame(var1 = rnorm(n = 50,
mean = 5,
sd = 2),
var2 = rnorm(n = 50,
mean = 4,
sd = 2))
grp_values <- rnorm(n = 50,
mean = c(5, 4),
sd = c(3, 1))
groups <- rep(letters[1:2], length.out = 50)
grps_df <- data.frame(grp_values, groups)
data <- data.frame(data, grps_df)
onet_2 <- t.test(x = data$var2,
mu = 5,
Paired = TRUE)
plot(onet_2)
onet_2
onet_2 <- t.test(x = data$var1,
mu = 5,
Paired = TRUE)
plot(onet_2)
mean(data$var1)
sd(data$var1)
(5.06-5)/2.03395/sqft(50)
(5.06-5)/2.03395/sqrt(50)
onet_2 <- t.test(x = data$var1,
mu = 5,
Paired = FALSE)
plot(onet_2)
onet_2
(5.06-5)/2.03395/sqrt(len(data$var1))
(5.06-5)/2.03395/sqrt(length(data$var1))
summary(onet_2)
onet_2 <- t.test(x = data$var1,
mu = 5,
conf.level = 1-.05)
plot(onet_2)
onet_2
(mean(data$var1) - 5) / (sd(data$var1)/sqrt(length(data)))
onet_2 <- t.test(x = data$var1,
mu = 5,
conf.level = 1-.05)
onet_2
(mean(data$var1) - 5) / (sd(data$var1)/sqrt(length(data)))
(mean(data$var1) - 5) / (sd(data$var1)/sqrt(length(data$var1)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
